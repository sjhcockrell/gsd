#!/bin/bash
#
#   gsd
#   A simple script to help you get work done.
#
#
#   on
#       Turns on the blocking.
#
#   off
#       Turns off the blocking.
#
#   version, -v
#       Prints the version number.
#
#   help, -h
#       Prints some instructions.

#   Constants
#

VERSION=0.1


hosts="/etc/hosts"
hosts_backup="$hosts.backup"
blocked_hosts="$hosts.blocked"


#   Function
#
function on {
    echo
    echo "It's time to Get Shit Done(tm)."
    echo

    # Make a backup of hosts file, if DNE.
    if [ ! -e $hosts_backup ]; then
        echo "    Making a backup of $hosts..."
        cp $hosts $hosts_backup
        echo "    Backup file is $hosts_backup."
    fi

    # Read from the array passed in, and add to /etc/hosts
    echo "    Blocking:"
    for site in $*; do
        echo "    "$site
        line="127.0.0.1 $site"
        grep " "$site $hosts > /dev/null; append=$?
        if [ $append == 1 ]; then
            echo $line >> $hosts
        fi
    done

    # Flush the cache.
    flush

    # Exit.
    echo
    exit
}

function off {
    echo
    echo "Ok, time to relax."
    echo "    Unblocking sites..."

    # Read from the array, and remove files from /etc/hosts
    for site in $*; do
        sed -i '' "/127.0.0.1 $site/d" $hosts
    done

    # Flush the cache.
    flush

    # And, done.
    echo "    The internet is back in town."
    echo
    exit
}

function flush {
    if [ `uname` == Darwin ]; then
        echo
        echo "    Flushing cache..."
        $(which dscacheutil) -flushcache
    fi
}

function version {
    echo "gsd, v$VERSION"
    exit
}

function hlp {
    echo
    echo "gsd, the get shit done script"
    echo
    echo "on"
    echo "    Blocks a list of sites by modifying the $hosts file."
    echo "off"
    echo "    Unblocks sites from your list by modifying the $hosts file."
    echo "-v"
    echo "    Prints the version."
    echo "-h"
    echo "    Prints these instructions."
    echo

    exit
}

function checkSudo {
    if [ $UID -ne 0 ]; then
        echo "usage: 'sudo gsd $1'" >&2
        exit 2
    fi   
}

#   If called without arguments, exit.
if [ $# -ne 1 ]; then
    echo
    echo "usage: gsd on      ... turns on blocking."
    echo "       gsd off     ... turns off blocking."
    echo
    exit

else
    # Find all blocked hosts
    if [ ! -e $blocked_hosts ]; then
        echo "ERROR: The list of websites to block does not exist."
        echo "    Make sure there's a hosts.blocked file in /etc/." >&1
        exit 1
    fi

    blocked_sites=()

    # Read all lines from our $blocked_hosts file
    # Put into an array that we will pass to on() or off().
    #   Ignore comments and blank lines, obv.

    # This is a really goofy way to do it.
    #
    #   egrep -v '^(#|$)' $blocked_hosts | ...
    #
    # Would be a lot smarter.
    while read line; do
        first_char=`echo $line | cut -c1-1`
        if [ "$first_char" == "#" ];then
            continue
        fi
        blocked_sites+=($line)

        # Making it more restrictive: does it start with www.*?
        if [[ $line == www\.* ]]; then
            minus_www=`echo $line | cut -c5-${#line}`
            blocked_sites+=($minus_www)
        fi

    done < $blocked_hosts

    case $1 in
        on)
            # Make sure sudo is used.
            checkSudo $1
            on ${blocked_sites[@]}
        ;;

        off)
            # Make sure sudo is used.
            checkSudo $1
            off ${blocked_sites[@]}
        ;;

        version)
            version
        ;;

        -v)
            version
        ;;

        help)
            hlp
        ;;

        -h)
            hlp
        ;;
    esac
fi
